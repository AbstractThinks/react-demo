{"version":3,"sources":["webpack:///./clock/src/app.js?1818"],"names":["store","Counter","incrementIfOdd","props","value","onIncrement","incrementAsync","setTimeout","onDecrement","render","getState","dispatch","type","document","getElementById","subscribe"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;;;;;;AAFA;;;AAIA,KAAMA,QAAQ,2CAEN,4BAAgB,4BAAhB,CAFM,CAAd;;KAKMC,O;;;;;;;;;;;;;;yLAGJC,c,GAAiB,YAAM;AACrB,WAAI,MAAKC,KAAL,CAAWC,KAAX,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9B,eAAKD,KAAL,CAAWE,WAAX;AACD;AACF,M,QAEDC,c,GAAiB,YAAM;AACrBC,kBAAW,MAAKJ,KAAL,CAAWE,WAAtB,EAAmC,IAAnC;AACD,M;;;;;8BAEQ;AAAA,oBACqC,KAAKF,KAD1C;AAAA,WACCC,KADD,UACCA,KADD;AAAA,WACQC,WADR,UACQA,WADR;AAAA,WACqBG,WADrB,UACqBA,WADrB;;AAEP,cACE;AAAA;AAAA;AAAA;AACYJ,cADZ;AAAA;AAEG,YAFH;AAGE;AAAA;AAAA,aAAQ,SAASC,WAAjB;AAAA;AAAA,UAHF;AAMG,YANH;AAOE;AAAA;AAAA,aAAQ,SAASG,WAAjB;AAAA;AAAA,UAPF;AAUG,YAVH;AAWE;AAAA;AAAA,aAAQ,SAAS,KAAKN,cAAtB;AAAA;AAAA,UAXF;AAcG,YAdH;AAeE;AAAA;AAAA,aAAQ,SAAS,KAAKI,cAAtB;AAAA;AAAA;AAfF,QADF;AAqBD;;;;;;AAGH,KAAMG,SAAS,SAATA,MAAS,GAAM;AACb,sBAASA,MAAT,CACQ,8BAAC,OAAD;AACQ,YAAOT,MAAMU,QAAN,EADf;AAEQ,kBAAa;AAAA,cAAMV,MAAMW,QAAN,CAAe,EAAEC,MAAM,WAAR,EAAf,CAAN;AAAA,MAFrB;AAGQ,kBAAa;AAAA,cAAMZ,MAAMW,QAAN,CAAe,EAAEC,MAAM,WAAR,EAAf,CAAN;AAAA;AAHrB,KADR,EAMQC,SAASC,cAAT,CAAwB,MAAxB,CANR;AAOP,EARD;;AAUAL;AACAT,OAAMe,SAAN,CAAgBN,MAAhB,E","file":"0.5dd4d0f3ffc5b809432a.hot-update.js","sourcesContent":["import React, {Component}from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { applyMiddleware,createStore } from 'redux'\r\n// import Counter from './components/Counter'\r\nimport counter from './reducer';\r\nimport createLogger from 'redux-logger';\r\n\r\nconst store = createStore(\r\n        counter,\r\n        applyMiddleware(createLogger())\r\n)\r\n\r\nclass Counter extends Component {\r\n\r\n\r\n  incrementIfOdd = () => {\r\n    if (this.props.value % 2 !== 0) {\r\n      this.props.onIncrement()\r\n    }\r\n  }\r\n\r\n  incrementAsync = () => {\r\n    setTimeout(this.props.onIncrement, 1000)\r\n  }\r\n\r\n  render() {\r\n    const { value, onIncrement, onDecrement } = this.props\r\n    return (\r\n      <p>\r\n        Clicked: {value} times\r\n        {' '}\r\n        <button onClick={onIncrement}>\r\n          +\r\n        </button>\r\n        {' '}\r\n        <button onClick={onDecrement}>\r\n          -\r\n        </button>\r\n        {' '}\r\n        <button onClick={this.incrementIfOdd}>\r\n          Increment if odd\r\n        </button>\r\n        {' '}\r\n        <button onClick={this.incrementAsync}>\r\n          Increment async\r\n        </button>\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\nconst render = () => {\r\n        ReactDOM.render(\r\n                <Counter\r\n                        value={store.getState()}\r\n                        onIncrement={() => store.dispatch({ type: 'INCREMENT' })}\r\n                        onDecrement={() => store.dispatch({ type: 'DECREMENT' })}\r\n                />,\r\n                document.getElementById('root'));\r\n}\r\n\r\nrender()\r\nstore.subscribe(render);\r\n\n\n\n// WEBPACK FOOTER //\n// ./clock/src/app.js"],"sourceRoot":""}